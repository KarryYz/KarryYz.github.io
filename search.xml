<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>除夕快乐</title>
      <link href="/2025/01/28/%E9%99%A4%E5%A4%95%E5%BF%AB%E4%B9%90/"/>
      <url>/2025/01/28/%E9%99%A4%E5%A4%95%E5%BF%AB%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<h1 id="新的一年大家天天开心">新的一年大家天天开心</h1><h2 id="祝大家-2025年天天开心">祝大家 2025年天天开心！</h2><h3id="算法水平蒸蒸日上早日拿到自己想要的成绩">算法水平蒸蒸日上早日拿到自己想要的成绩！！</h3><h2 id="除夕快乐-明年见">除夕快乐 ！ 明年见！</h2><h4id="祈家事平和花朝月夕多胜意愿人间芳华岁岁年年长安康乐亲朋岁无忧新春快乐">祈家事平和，花朝月夕多胜意。愿人间芳华，岁岁年年长安康。乐亲朋，岁无忧，新春快乐。</h4><p><imgsrc="https://ts1.cn.mm.bing.net/th/id/R-C.58bae9ddfa9cbb09a86904afdca0d2a8?rik=4PZqV27%2fmNBO5w&amp;riu=http%3a%2f%2fimg.netbian.com%2ffile%2f20140122%2f727d22c7a819ec34d44849342dda9eb3.jpg&amp;ehk=eIiYJyG0RQOvAcvW2HB5MXJJtdmpqEqNs47pADGI3Vo%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> happiness </tag>
            
            <tag> 2025 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TEST</title>
      <link href="/2024/05/08/TEST/"/>
      <url>/2024/05/08/TEST/</url>
      
        <content type="html"><![CDATA[<h2 id="你好">你好</h2><p>hhh</p>]]></content>
      
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Product of Binary Decimals</title>
      <link href="/2024/05/03/%E9%A2%84%E5%A4%84%E7%90%86%E7%9A%84%E9%A2%98%E7%9B%AE/"/>
      <url>/2024/05/03/%E9%A2%84%E5%A4%84%E7%90%86%E7%9A%84%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="product-of-binary-decimals">Product of Binary Decimals</h2><p><a href="https://www.luogu.com.cn/problem/CF1950D">题目链接</a></p><h2 id="题面翻译">题面翻译</h2><h3 id="二进制小数的乘积">二进制小数的乘积</h3><h3 id="题目描述">题目描述</h3><p>我们称一个数字为二进制小数，如果它是一个正整数，并且其十进制表示中的所有数字都是0或1。例如，<spanclass="math inline">\(1010111\)</span> 是一个二进制小数，而 <spanclass="math inline">\(10201\)</span> 和 <spanclass="math inline">\(787788\)</span> 不是。</p><p>给定一个数 <spanclass="math inline">\(n\)</span>，你被要求判断是否可能将 <spanclass="math inline">\(n\)</span>表示为一些（不一定是不同的）二进制小数的乘积。</p><h3 id="输入格式">输入格式</h3><p>第一行包含一个整数 <span class="math inline">\(t\)</span>（<spanclass="math inline">\(1 \leq t \leq 5 \cdot 10^4\)</span>）—测试用例的数量。</p><p>每个测试用例的唯一一行包含一个整数 <spanclass="math inline">\(n\)</span>（<span class="math inline">\(1 \leq n\leq 10^5\)</span>）。</p><h3 id="输出格式">输出格式</h3><p>对于每个测试用例，如果 <span class="math inline">\(n\)</span>可以表示为一些二进制小数的乘积，则输出 "YES"（不带引号），否则输出"NO"（不带引号）。</p><p>你可以以任何形式输出 "YES" 和 "NO"（例如，字符串 "yES"、"yes" 和"Yes" 都将被认为是肯定的响应）。</p><h3 id="说明提示">说明/提示</h3><p>前五个测试用例可以表示为二进制小数的乘积如下：</p><p><span class="math inline">\(121 = 11 \times 11\)</span></p><p><span class="math inline">\(1 = 1\)</span> 已经是一个二进制小数。</p><p><span class="math inline">\(14641 = 11 \times 11 \times 11 \times11\)</span></p><p><span class="math inline">\(12221 = 11 \times 11 \times101\)</span></p><p><span class="math inline">\(10110 = 10110\)</span>已经是一个二进制小数。</p><h2 id="题目描述-1">题目描述</h2><p>Let's call a number a binary decimal if it is a positive integer andall digits in its decimal notation are either <spanclass="math inline">\(0\)</span> or <spanclass="math inline">\(1\)</span> . For example, <spanclass="math inline">\(1\,010\,111\)</span> is a binary decimal, while<span class="math inline">\(10\,201\)</span> and <spanclass="math inline">\(787\,788\)</span> are not.</p><p>Given a number <span class="math inline">\(n\)</span> , you are askedwhether or not it is possible to represent <spanclass="math inline">\(n\)</span> as a product of some (not necessarilydistinct) binary decimals.</p><h2 id="输入格式-1">输入格式</h2><p>The first line contains a single integer <spanclass="math inline">\(t\)</span> ( <span class="math inline">\(1 \leq t\leq 5 \cdot 10^4\)</span> ) — the number of test cases.</p><p>The only line of each test case contains a single integer $ n $ (<span class="math inline">\(1 \leq n \leq 10^5\)</span> ).</p><h2 id="输出格式-1">输出格式</h2><p>For each test case, output "YES" (without quotes) if <spanclass="math inline">\(n\)</span> can be represented as a product ofbinary decimals, and "NO" (without quotes) otherwise.</p><p>You can output "YES" and "NO" in any case (for example, strings"yES", "yes", and "Yes" will be recognized as a positive response).</p><h2 id="样例-1">样例 #1</h2><h3 id="样例输入-1">样例输入 #1</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">121</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">14641</span></span><br><span class="line"><span class="number">12221</span></span><br><span class="line"><span class="number">10110</span></span><br><span class="line"><span class="number">100000</span></span><br><span class="line"><span class="number">99</span></span><br><span class="line"><span class="number">112</span></span><br><span class="line"><span class="number">2024</span></span><br><span class="line"><span class="number">12421</span></span><br><span class="line"><span class="number">1001</span></span><br></pre></td></tr></table></figure><h3 id="样例输出-1">样例输出 #1</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">YES</span><br></pre></td></tr></table></figure><h2 id="提示">提示</h2><p>The first five test cases can be represented as a product of binarydecimals as follows:</p><ul><li><span class="math inline">\(121 = 11 \times 11\)</span> .</li><li><span class="math inline">\(1 = 1\)</span> is already a binarydecimal.</li><li><span class="math inline">\(14\,641 = 11 \times 11 \times 11 \times11\)</span> .</li><li><span class="math inline">\(12\,221 = 11 \times 11 \times101\)</span> .</li><li><span class="math inline">\(10\,110 = 10\,110\)</span> is already abinary decimal.</li><li><span class="math inline">\(10\,110 = 10\,110\)</span></li></ul><hr /><h2 id="思路">思路</h2><p>我们可以预处理一下所有数 然后用筛因数的方法因为只有要保证当前因数满足题意 我们就可以先判断是否为纯 <spanclass="math inline">\(01\)</span> 串 如果不是的话我们筛因数 我们可以想到判断这个数的因数那么就会是之前已经遍历过的因数 也就是对于这个数 <spanclass="math inline">\({n/i}\)</span> 也一定要满足。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> check[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_binary</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s = <span class="built_in">to_string</span>(x);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : s)</span><br><span class="line">        <span class="keyword">if</span> (c &gt; <span class="string">&#x27;1&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">is_binary</span>(i))</span><br><span class="line">        &#123;</span><br><span class="line">            check[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j * j &lt;= i; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (check[j] &amp;&amp; check[i / j])</span><br><span class="line">                &#123;</span><br><span class="line">                    check[i] = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">init</span> ();</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (check[x]) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的算法之旅</title>
      <link href="/2024/04/28/%E6%88%91%E7%9A%84%E7%AE%97%E6%B3%95%E4%B9%8B%E6%97%85/"/>
      <url>/2024/04/28/%E6%88%91%E7%9A%84%E7%AE%97%E6%B3%95%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<p>第一次进入算法比赛,非常的开心 天梯赛国三</p><p>yeah</p>]]></content>
      
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2024/04/25/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/04/25/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>你好</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">哈哈哈哈</span><br></pre></td></tr></table></figure><p><a href="www.baidu.com">你好</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/04/24/hello-world/"/>
      <url>/2024/04/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
